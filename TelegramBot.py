import telebot
from telebot import types
import requests
import BotAPI


bot = telebot.TeleBot(BotAPI.api)

user_states = {}


main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row('/help', '/weather', '/cat')
main_menu.row('/dice', '/tie', '/link')


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç, —è —Ç–≥ –±–æ—Ç. –í–æ—Ç, —á—Ç–æ –º–æ–≥—É:\n"
        "/cat - –º–µ–º —Å –∫–æ—Ç–æ–º\n"
        "/dice - –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫\n"
        "/weather - –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ\n"
        "/tie - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≤—è–∑—ã–≤–∞–Ω–∏—é –≥–∞–ª—Å—Ç—É–∫–∞\n"
        "/link - —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –¢–¢–ò–¢\n"
        "–û—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞ YouTube\n"
        "–ù—É –∏–ª–∏ —è –≤–µ—Ä–Ω—É —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —Å—ã—â—É —Ä–æ–ª–∏–∫\n"
    )
    bot.send_message(message.chat.id, welcome_text, reply_markup=main_menu)


@bot.message_handler(commands=['link'])
def url(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–°–∞–π—Ç –¢–¢–ò–¢', url='https://tomtit.tomsk.ru/')
    markup.add(btn1)
    bot.send_message(message.from_user.id, "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –¢–¢–ò–¢", reply_markup=markup)


@bot.message_handler(commands=['cat'])
def send_cat_meme(message):
    try:
        response = requests.get("https://api.thecatapi.com/v1/images/search")
        if response.status_code == 200:
            bot.send_photo(message.chat.id, response.json()[0]['url'])
    except:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ç–∏–∫–∞(")


@bot.message_handler(commands=['dice'])
def roll_dice(message):
    bot.send_dice(message.chat.id, emoji='üé≤')


@bot.message_handler(commands=['weather'])
def ask_city_weather(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
    user_states[message.chat.id] = 'awaiting_weather'
    bot.register_next_step_handler(msg, process_city_weather)


def process_city_weather(message):
    try:
        city = message.text
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={BotAPI.weather_api}&units=metric&lang=ru"
        response = requests.get(url)

        if response.status_code == 200:
            data = response.json()
            weather_text = (
                f"–ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp']}¬∞C\n"
                f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {data['main']['feels_like']}¬∞C\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['main']['humidity']}%\n"
                f"–í–µ—Ç–µ—Ä: {data['wind']['speed']} –º/—Å\n"
                f"{data['weather'][0]['description'].capitalize()}"
            )
            bot.send_message(message.chat.id, weather_text)
        else:
            bot.send_message(message.chat.id, "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω(")
    except:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã")
    user_states.pop(message.chat.id, None)


@bot.message_handler(commands=['tie'])
def send_tie_tutorial(message):
    tutorial_url = "https://www.youtube.com/watch?v=xAg7z6u49NE"
    bot.send_message(message.chat.id, f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n{tutorial_url}")


@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    chat_id = message.chat.id

    if user_states.get(chat_id) is None and len(message.text) > 3:
        try:
            search_query = message.text
            url = f"https://www.googleapis.com/youtube/v3/search?q={search_query}&key={BotAPI.youtube_api}&part=snippet&type=video&maxResults=1"
            response = requests.get(url)

            if response.status_code == 200:
                video_id = response.json()['items'][0]['id']['videoId']
                bot.send_message(chat_id, f"–¢—ã –∏—Å–∫–∞–ª —ç—Ç–æ –≤–∏–¥–µ–æ?:\nhttps://youtu.be/{video_id}")
                return
        except:
            pass

    if user_states.get(chat_id) is None:
        bot.send_message(chat_id, f"{message.text}")


bot.infinity_polling()
